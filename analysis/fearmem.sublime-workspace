{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"mem",
				"memory"
			],
			[
				"prop",
				"proportion"
			],
			[
				"resp",
				"response"
			],
			[
				"m",
				"multiple_logreg"
			],
			[
				"subj",
				"subject"
			],
			[
				"sour",
				"source_memory"
			],
			[
				"set_x",
				"set_xticklabels"
			],
			[
				"tw",
				"two-sided"
			],
			[
				"lin",
				"linewidth"
			],
			[
				"set_yl",
				"set_ylim"
			],
			[
				"set_",
				"set_edgecolor"
			],
			[
				"cond",
				"condition"
			],
			[
				"in",
				"intercept_"
			],
			[
				"typ",
				"typicality"
			],
			[
				"label",
				"label_bars"
			],
			[
				"font",
				"fontsize"
			],
			[
				"pai",
				"paired_barplot_annotate_brackets"
			],
			[
				"dis",
				"discrete"
			],
			[
				"tria",
				"trial_number"
			],
			[
				"trial",
				"trial_number"
			],
			[
				"source",
				"source_memory_typicality"
			],
			[
				"q",
				"query"
			],
			[
				"poin",
				"pointplot"
			],
			[
				"set_y",
				"set_ylabel"
			],
			[
				"rese",
				"response_phase"
			],
			[
				"x",
				"xcl_sub_args"
			],
			[
				"two",
				"two-tailed"
			],
			[
				"ran",
				"RandomState"
			],
			[
				"clea",
				"cleaned_avg_sm"
			],
			[
				"typc",
				"typicality"
			],
			[
				"set",
				"set_ylabel"
			],
			[
				"cl",
				"cleaned_full_sm"
			],
			[
				"mat",
				"matplotlib"
			],
			[
				"line",
				"linewidth"
			],
			[
				"memory",
				"memory_difference_scores"
			],
			[
				"con",
				"condition"
			],
			[
				"subject",
				"subjects"
			],
			[
				"phase",
				"phase_convert"
			],
			[
				"cleaned_",
				"cleaned_corrected_recognition"
			],
			[
				"rec",
				"recognition_memory"
			],
			[
				"res",
				"response_phase"
			],
			[
				"stim",
				"stimulus"
			],
			[
				"memo",
				"memory_run-03"
			],
			[
				"fear",
				"fearpal"
			],
			[
				"pos",
				"pospal"
			],
			[
				"lmm",
				"lmm_res"
			],
			[
				"as",
				"as_cmap"
			],
			[
				"p",
				"phases"
			],
			[
				"suib",
				"subjects_dir"
			],
			[
				"subjects",
				"subjects_dir"
			],
			[
				"ex",
				"extinction"
			],
			[
				"enco",
				"encode_phases"
			],
			[
				"endo",
				"encode_phases"
			],
			[
				"all",
				"all_phases"
			],
			[
				"beta",
				"beta_backup"
			],
			[
				"reg",
				"regfolder"
			],
			[
				"modl",
				"model_dir"
			],
			[
				"enc",
				"encode_mem"
			],
			[
				"s_desc-preproc",
				"s_desc-preproc_bold"
			],
			[
				"fig",
				"figsize"
			],
			[
				"a",
				"atlas_img"
			],
			[
				"eno",
				"encode_phase"
			],
			[
				"int",
				"interpolation"
			],
			[
				"re",
				"resample_img"
			],
			[
				"at",
				"atlas_str"
			],
			[
				"rsa",
				"rsa_results"
			],
			[
				"all_",
				"all_mem_labels"
			],
			[
				"grou",
				"group_gPPI_out"
			],
			[
				"encoe",
				"encode_df"
			],
			[
				"mem_",
				"mem_phases"
			],
			[
				"encod",
				"encode_phase"
			],
			[
				"replace",
				"replacements"
			],
			[
				"extracte",
				"extracted_gPPI"
			],
			[
				"gpp",
				"gPPI_codebase"
			],
			[
				"gPP",
				"gPPI_codebase"
			],
			[
				"ttest",
				"ttest_1samp"
			],
			[
				"std_200",
				"std_2009_brain_3mm"
			],
			[
				"ref",
				"reference"
			],
			[
				"work",
				"working_label"
			],
			[
				"s_from",
				"sub-FC010_from-T1w_to-MNI152NLin2009cAsym_mode-image_xfm"
			],
			[
				"sub",
				"subplots"
			],
			[
				"mas",
				"mask_dat"
			],
			[
				"seed",
				"seed_dir"
			],
			[
				"s",
				"s_"
			],
			[
				"new",
				"new_img_like"
			],
			[
				"rh_",
				"rh_amyg"
			],
			[
				"std",
				"std_2009_brain"
			],
			[
				"sta",
				"standard"
			],
			[
				"st",
				"standard_mask"
			],
			[
				"stan",
				"standard_head"
			],
			[
				"aparc",
				"aparcaseg"
			],
			[
				"t1",
				"t1_brain"
			],
			[
				"group",
				"group_gPPI"
			],
			[
				"rh",
				"rh_amyg"
			],
			[
				"mask",
				"mask_name"
			],
			[
				"copy",
				"copypasta"
			],
			[
				"ac",
				"acquisition"
			],
			[
				"conca",
				"concatenate"
			],
			[
				"prepro",
				"preproc_dir"
			],
			[
				"model",
				"model_dir"
			],
			[
				"mode",
				"model_dir"
			],
			[
				"txt",
				"txt_file"
			],
			[
				"prep",
				"preproc_dir"
			],
			[
				"pro",
				"preproc_dir"
			],
			[
				"early",
				"early_rnw"
			],
			[
				"encode",
				"encode_phase"
			],
			[
				"ec",
				"encode_phase"
			],
			[
				"local",
				"localizer_2"
			],
			[
				"memor",
				"memory_run_3"
			],
			[
				"memory_",
				"memory_run_1"
			],
			[
				"e",
				"extinction_recall"
			],
			[
				"ext",
				"extinction"
			],
			[
				"sub_",
				"sub_arg"
			],
			[
				"sc",
				"Schizophrenic"
			],
			[
				"Dara",
				"DataFrame"
			],
			[
				"sha",
				"sharey"
			],
			[
				"encodin",
				"encoding_phases"
			],
			[
				"O",
				"OrderedDict"
			],
			[
				"we",
				"weights"
			],
			[
				"vox",
				"voxel_dir"
			],
			[
				"fear_",
				"fear_conditioning"
			],
			[
				"comb",
				"combinations"
			],
			[
				"json",
				"json_file"
			],
			[
				"ini",
				"initialize"
			],
			[
				"dcm2",
				"dcm2bids_call"
			],
			[
				"en",
				"encode"
			],
			[
				"graph",
				"graphdat"
			],
			[
				"get",
				"get_xlim"
			]
		]
	},
	"buffers":
	[
		{
			"file": "fm_statistics.py",
			"settings":
			{
				"buffer_size": 18470,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "util_scripts.py",
			"settings":
			{
				"buffer_size": 5245,
				"line_ending": "Windows"
			}
		},
		{
			"file": "paper_graphics.py",
			"settings":
			{
				"buffer_size": 21171,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 12 files for \"skipped\" (case sensitive)\n\n/Users/ach3377/Documents/fearmem/analysis/fm_statistics.py:\n    1  from fm_behavioral import *\n    2: from robust_corr import skipped_corr\n    3  '''RECOGNITION MEMORY'''\n    4  #a priori memory enhancement effect (CS+ > CS-)\n    .\n  179  df = df.set_index(['encode_phase','subject']).sort_index()\n  180  for phase in phases:\n  181:     skipped_corr(df.loc[phase,'prop'],df.loc[phase,'cr'])\n  182:     skipped_corr(df.loc[phase,'typicality'],df.loc[phase,'cr'])\n  183      \n  184  '''super-subject logistic regression'''\n\n/Users/ach3377/Documents/fearmem/analysis/paper_graphics.py:\n    1  from fm_config import *\n    2: from robust_corr import skipped_corr\n    3  from paper_graphics_style import *\n    4  \n    .\n   84  fig, ax = plt.subplots(1,3,sharey=True,sharex=True,figsize=mm2inch(200,200*.4))\n   85  for p, phase in enumerate(['baseline','acquisition','extinction']):\n   86:     skipped_corr(x=df.loc[phase,'prop'], y=df.loc[phase,'cr'], ax=ax[p], color=wes_palettes['Royal1'][0])\n   87      # sns.regplot(data=df[df.encode_phase == phase], x='prop', y='cr',ax=ax[p],color=spal[1])\n   88      ax[p].set_xlabel('')\n   ..\n   94  \n   95  rcParams['mathtext.default'] = 'regular'\n   96: ax[0].text(-0.25,.5,'$r_{skipped}$ = 0.34*',fontsize=rcParams['font.size'],va='bottom')\n   97: ax[1].text(-0.25,.5,'$r_{skipped}$ = 0.36*',fontsize=rcParams['font.size'],va='bottom')\n   98: ax[2].text(-0.25,.5,'$r_{skipped}$ = 0.37*',fontsize=rcParams['font.size'],va='bottom')\n   99  \n  100  '''Fig. 4 source memory logistic predictions'''\n\n/Users/ach3377/Documents/fearmem/analysis/robust_corr.py:\n   85  \n   86  \n   87: def plot_full_skipped_corr(x,y,title):\n   88      from pingouin.utils import _is_sklearn_installed\n   89      _is_sklearn_installed(raise_error=True)\n   ..\n  160      plt.tight_layout()\n  161  \n  162: def skipped_corr(x, y, ax=None, color='blue'):\n  163  \n  164      from pingouin.utils import _is_sklearn_installed\n\n10 matches across 3 files\n\n\nSearching 12 files for \"convert\" (case sensitive)\n\n/Users/ach3377/Documents/fearmem/analysis/fm_behavioral.py:\n   34              df['hc_acc'] = df.recognition_memory.apply(lambda x: 1 if x == 'DO' else 0)\n   35  \n   36:             phase_convert = {1:'baseline',2:'acquisition',3:'extinction'}\n   37:             df.source_memory = df.source_memory.apply(lambda x: phase_convert[x])\n   38  \n   39              for con in cons:\n\n/Users/ach3377/Documents/fearmem/analysis/fm_config.py:\n   48  tpal = list((wes_palettes['Chevalier'][0],wes_palettes['Chevalier'][1]))\n   49  cpoint = sns.color_palette(cpal,n_colors=2,desat=.75)\n   50: phase_convert = {1:'baseline',2:'acquisition',3:'extinction'}\n   51  phase2int = {'baseline':1,'acquisition':2,'extinction':3}\n   52  \n\n/Users/ach3377/Documents/fearmem/analysis/fm_graphing.py:\n  123  '''SOURCE MEMORY BY TRIAL NUMBER'''\n  124  df = pd.read_csv('../cleaned_full_sm.csv').rename(columns={'trial_type':'condition'})\n  125: df.source_memory = df.source_memory.apply(lambda x: phase_convert[x])\n  126  df = df.groupby(['encode_phase','condition','trial_number','source_memory'])['subject'].count().reset_index()\n  127  df = df.rename(columns={'subject':'sub_prop'})\n\n/Users/ach3377/Documents/fearmem/analysis/fm_statistics.py:\n  193      \n  194      onehot = pd.get_dummies(dat.source_memory)\n  195:     onehot = onehot.rename(columns=phase_convert)\n  196  \n  197      for i in range(n_boot):\n  ...\n  360          ).set_index(['subject']\n  361          ).sort_index()\n  362: # df.source_memory = df.source_memory.apply(lambda x: phase_convert[x])\n  363  df = df.drop(columns=['stimulus','trial_number','group','recognition_memory'])\n  364  # df = pd.get_dummies(df,columns=['encode_phase','source_memory','condition'])\n\n/Users/ach3377/Documents/fearmem/analysis/paper_graphics.py:\n  137      # pvals = pvals.reset_index()\n  138      pvals['encode_phase'] = phase\n  139:     pvals['star'] = pvals.p.apply(p_convert)\n  140      pvals.to_csv(f'../paper/{phase}_sm_betas.csv')\n  141  \n  ...\n  152              ax[i].text(xtick+rpos[r],pvals.loc[(con,response),topbot],pvals.loc[(con,response),'star'],ha='center',va=va)\n  153      #     #get the mean and 95%CI out here, and just copy paste into excel I think\n  154:     #     acq_bsl = p_convert(1 - (df.loc[(con,'acquisition'),'beta'].values > df.loc[(con,'baseline'),'beta'].values).mean())\n  155:     #     acq_ext = p_convert(1 - (df.loc[(con,'acquisition'),'beta'].values > df.loc[(con,'extinction'),'beta'].values).mean())\n  156      #     print(con, phase, acq_bsl, acq_ext)\n  157      #     y = pvals.loc[(con,'acquisition'),'topval']+.2\n  ...\n  328  pvals['topval'] = df.groupby(['phase','condition']).max()\n  329  # pvals = pvals.reset_index()\n  330: pvals['star'] = pvals.p.apply(p_convert)\n  331  pvals.to_csv(f'../paper/typicality_betas.csv')\n  332  pvals.loc[('baseline','CS+'),'star'] = '~'\n\n/Users/ach3377/Documents/fearmem/analysis/paper_graphics_style.py:\n    6  rcParams['savefig.dpi'] = 900\n    7  \n    8: def p_convert(x):\n    9      if x < .001: return '***'\n   10      elif x < .01: return '**'\n\n/Users/ach3377/Documents/fearmem/analysis/tables.py:\n    1: from paper_graphics_style import p_convert\n    2  '''code for grabbing all the data necessary for the tables of memory data'''\n    3  ctx_rname = {'baseline':'pre-conditioning','acquisition':'fear conditioning','extinction':'post-conditioning','':''}\n    .\n   93                                    'response_phase':'Response'})\n   94  table = table[['Temporal Context','CS Type','Response','Mean','95% CI','P']]\n   95: table['_sig'] = table.P.apply(p_convert) \n   96  table.round(4).to_csv('../paper/source_memory_table.csv',index=False)\n   97  \n   ..\n  114  table.P = table.P.apply(lambda x: 0.0001 if x == 0 else x)\n  115  table = table.sort_values(by=['Temporal Context','CS Type','Response'])\n  116: table['_sig'] = table.P.apply(p_convert) \n  117  table.round(4).to_csv('../paper/souce_memory_betas_table.csv',index=False)\n  118  #do the stuff\n  ...\n  129                             'p':'P'})\n  130  table = table.sort_values(by=['Temporal Context','CS Type'])\n  131: table['_sig'] = table.P.apply(p_convert)\n  132  table.round(4).to_csv('../paper/tables/typicality_table.csv',index=False)\n  133  \n\n/Users/ach3377/Documents/fearmem/analysis/util_scripts.py:\n    6  from fm_behavioral import *\n    7  \n    8: # def sm_convert(x):\n    9  #     if x == 1: return 'baseline'\n   10  #     elif x == 2: return 'acquisition'\n\n16 matches across 8 files\n",
			"settings":
			{
				"buffer_size": 6532,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "robust_corr.py",
			"settings":
			{
				"buffer_size": 7629,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "paper_graphics_style.py",
			"settings":
			{
				"buffer_size": 3220,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "tables.py",
			"settings":
			{
				"buffer_size": 6750,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "fm_graphing.py",
			"settings":
			{
				"buffer_size": 17628,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "fm_behavioral.py",
			"settings":
			{
				"buffer_size": 6071,
				"line_ending": "Unix"
			}
		},
		{
			"file": "fm_config.py",
			"settings":
			{
				"buffer_size": 10992,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"colorche",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				":w",
				":w - Save"
			],
			[
				"Packagereser",
				"PackageResourceViewer: Open Resource"
			],
			[
				"Packageresource",
				"PackageResourceViewer: Open Resource"
			],
			[
				"colorsublime",
				"Colorsublime: Install Theme"
			],
			[
				"PackageResource",
				"PackageResourceViewer: Open Resource"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"color",
				"Colorsublime: Install Theme"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"change ",
				"MarkdownEditing: Change color scheme..."
			],
			[
				"MarkdownEditing: Change color scheme...",
				"MarkdownEditing: Change color scheme..."
			],
			[
				"color sche",
				"MarkdownEditing: Change color scheme..."
			],
			[
				"prv",
				"PackageResourceViewer: Extract Package"
			],
			[
				"settings",
				"Preferences: Package Control Settings – User"
			],
			[
				"key bin",
				"Preferences: Key Bindings"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"packack",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/ach3377/Documents/fearmem/analysis"
	],
	"file_history":
	[
		"/Users/ach3377/Documents/fearmem/analysis/robust_corr.py",
		"/Users/ach3377/Documents/fearmem/analysis/fm_config.py",
		"/Users/ach3377/Documents/fearmem/analysis/fm_graphing.py",
		"/Users/ach3377/Documents/fearmem/analysis/util_scripts.py",
		"/Users/ach3377/Documents/achennings.github.io/index.md",
		"/Users/ach3377/Documents/cgrab.py",
		"/C/Users/ACH/Documents/fearmem/analysis/fm_behavioral.py",
		"/C/Users/ACH/Downloads/fslinstaller.py",
		"/C/Users/ACH/Desktop/basic_model_lvl2_cope_input_test.gfeat/design.fsf",
		"/C/Users/ACH/Desktop/source_memory_lvl2.gfeat/design.con",
		"/C/Users/ACH/Documents/gPPI/graphing_functions.py",
		"/C/Users/ACH/Documents/gPPI/fg_config.py",
		"/C/Users/ACH/Documents/ExPress/analysis/real_better_graphing.py",
		"/C/Users/ACH/AppData/Local/Packages/Microsoft.WindowsTerminal_8wekyb3d8bbwe/LocalState/settings.json",
		"/C/Users/ACH/Documents/fearmem/stimulus_list.txt",
		"/C/Program Files (x86)/Mendeley Desktop/MendeleyDesktop.exe.manifest",
		"/C/Users/ACH/Documents/ExPress/analysis/ex_config.py",
		"/D/FearCon/CodeBase/fc_behavioral.py",
		"/C/Users/ACH/Documents/fearmem/analysis/util_scripts.py",
		"/C/Users/ACH/Documents/fearmem/analysis/fm_config.py",
		"/D/FearCon/CodeBase/PCL_response.py",
		"/D/FearCon/CodeBase/mvpa_analysis_graphing.py",
		"/D/FearCon/CodeBase/nbc19.py",
		"/C/Users/ACH/Documents/gPPI/roi_rsa.py",
		"/C/Users/ACH/Documents/gPPI/roi_rsa_graphing.py",
		"/C/Users/ACH/Documents/fearmem/fm-bids/sub-FC002/events/sub-FC002_task-memory_run-02_events.tsv",
		"/C/Users/ACH/Documents/fearmem/fm-bids/sub-FC002/events/sub-FC002_task-localizer_run-02_events.tsv",
		"/C/Users/ACH/Documents/fc_memory_study/analysis/util_scripts.py",
		"/C/Users/ACH/Documents/fc_memory_study/analysis/proj_config.py",
		"/C/Users/ACH/Documents/fc_memory_study/fc-behavior_bids/sub-FC107/events/sub-FC107_task-localizer_run-01_events.tsv",
		"/C/Users/ACH/Documents/fc_memory_study/fc-behavior_bids/sub-FC107/events/sub-FC107_task-localizer_run-02_events.tsv",
		"/C/Users/ACH/Documents/fc_memory_study/analysis/fg_config.py",
		"/C/Users/ACH/Documents/Dunsmoor Lab/posgen/gengraph.py",
		"/C/ProgramData/Miniconda3/Lib/site-packages/seaborn/miscplot.py",
		"/C/Users/ACH/Documents/Dunsmoor Lab/custom_bids/fc.json",
		"/D/FearCon/CodeBase/fearcon_response.py",
		"/D/FearCon/CodeBase/behavioral_graphing.py",
		"/D/FearCon/CodeBase/cns19.py",
		"/D/FearCon/CodeBase/scr_analysis_fcp.py",
		"/D/FearCon/CodeBase/scr_analysis.py",
		"/C/Users/ACH/Documents/gPPI/fg_preproc.py",
		"/C/Users/ACH/Desktop/express_graphing_example.py",
		"/C/Users/ACH/Documents/ExPress/analysis/ex_behavioral.py",
		"/D/FearCon/Group_GLM/group_4trial_corr.gfeat/logs/feat0",
		"/C/Users/ACH/Documents/gPPI/conn_rsa.py",
		"/C/Users/ACH/Documents/gPPI/group_gPPI_analysis.py",
		"/C/Users/ACH/Documents/gPPI/cns20.py",
		"/C/Users/ACH/Documents/gPPI/pysurfer.py",
		"/C/Users/ACH/Documents/gPPI/brainnetome_display.py",
		"/D/FearCon/CodeBase/sfn18.py",
		"/C/Users/ACH/Documents/ExPress/analysis/graphing.py",
		"/C/Users/ACH/AppData/Roaming/Sublime Text 3/Packages/Colorsublime - Themes/cache/Colorsublime-Themes-master/themes/mutedrainbow_sky.tmTheme",
		"/C/Program Files/WindowsApps/Microsoft.WindowsTerminal_1.0.1401.0_x64__8wekyb3d8bbwe/defaults.json",
		"/C/Users/ACH/Documents/gPPI/univariate_analysis.py",
		"/C/Users/ACH/Documents/gPPI/bids_model.py",
		"/C/Users/ACH/Documents/gPPI/py_surfer_test.py",
		"/C/Users/ACH/Downloads/BN_Atlas_freesurfer/BN_Atlas_freesurfer/mapping_to_subjects.sh",
		"/C/ProgramData/Anaconda3/Lib/site-packages/nilearn/signal.py",
		"/C/ProgramData/Anaconda3/Lib/site-packages/nilearn/image/image.py",
		"/C/Users/ACH/Documents/gPPI/feats/gPPI/day1_encode_gPPI.fsf",
		"/C/Users/ACH/Documents/gPPI/feats/gPPI/template_memory_run-01_gPPI.fsf",
		"/C/Users/ACH/Desktop/design.mat",
		"/C/Users/ACH/Desktop/sub-FC010_memory_run-03_gPPI.feat/test.mat",
		"/C/Users/ACH/Dropbox (LewPeaLab)/STUDY/FearCon/CodeBase/fc_behavioral.py",
		"/C/Users/ACH/Documents/quals_practice_notes.txt",
		"/C/Users/ACH/Documents/meeting_8_28.txt",
		"/C/Users/ACH/Documents/license.txt",
		"/C/Users/ACH/Documents/jarrod_notes.txt",
		"/C/Users/ACH/Documents/freesurfer.txt",
		"/C/Users/ACH/Documents/acnn_big_data_conf.md",
		"/C/Users/ACH/Documents/7-18.txt",
		"/C/Users/ACH/Documents/fat/rsa/dsm_selfwithin.py",
		"/C/Users/ACH/Dropbox (LewPeaLab)/burst/workpls.py",
		"/C/Users/ACH/Dropbox (LewPeaLab)/burst/searchlight_example.py",
		"/C/Users/ACH/Dropbox (LewPeaLab)/burst/BurstSearch.py",
		"/C/Program Files (x86)/ProxyGate/list.dat",
		"/C/Users/ACH/Dropbox (LewPeaLab)/Gus/gPPI/feats/gPPI/group_day1_gPPI.fsf",
		"/C/Users/ACH/Downloads/BN_Atlas_for_FSL/Readme.txt",
		"/C/Users/ACH/Dropbox (LewPeaLab)/Gus/gPPI/fg_preproc.py",
		"/C/Users/ACH/Dropbox (LewPeaLab)/Gus/gPPI/group_gPPI_analysis.py",
		"/C/Users/ACH/Dropbox (LewPeaLab)/Gus/gPPI/feats/gPPI/template_memory_run-03_gPPI.fsf",
		"/C/Users/ACH/Dropbox (LewPeaLab)/Gus/gPPI/feats/gPPI/template_extinction_gPPI.fsf",
		"/C/Users/ACH/Dropbox (LewPeaLab)/Gus/gPPI/feats/gPPI/template_baseline_gPPI.fsf",
		"/C/Users/ACH/Dropbox (LewPeaLab)/Gus/gPPI/feats/gPPI/template_acquisition_gPPI.fsf",
		"/C/Users/ACH/Desktop/sub-FC010_acquisition_gPPI.feat/design.fsf",
		"/C/Users/ACH/Dropbox (LewPeaLab)/Gus/gPPI/sl_stats.py",
		"/C/Users/ACH/Dropbox (LewPeaLab)/STUDY/FearCon/CodeBase/searchlight_stats.py",
		"/C/Users/ACH/Dropbox (LewPeaLab)/Gus/gPPI/cns20.py",
		"/C/Users/ACH/Dropbox (LewPeaLab)/Gus/gPPI/roi_rsa.py",
		"/C/Users/ACH/Dropbox (LewPeaLab)/python_deconvolution/example_data/ppi_01.txt",
		"/C/Users/ACH/Desktop/source.feat/design.fsf",
		"/C/Users/ACH/Documents/yup/test_class.txt",
		"/C/Users/ACH/Dropbox (LewPeaLab)/Gus/gPPI/fg_config.py",
		"/C/Users/ACH/Desktop/beta_graphing.py",
		"/C/Users/ACH/Dropbox (LewPeaLab)/STUDY/FearCon/CodeBase/predictive_searchlight.py",
		"/C/Users/ACH/Dropbox (LewPeaLab)/Gus/gPPI/graphing_functions.py",
		"/C/Users/ACH/Dropbox (LewPeaLab)/STUDY/FearCon/CodeBase/mem_rsa.py",
		"/C/Users/ACH/Dropbox (LewPeaLab)/Gus/gPPI/hc_seg.py",
		"/C/Users/ACH/Dropbox (LewPeaLab)/Gus/ExPress/transformed_SCR/conditioning1_pt1/Autonomate_Batch_Output_2020417_101.txt",
		"/C/Users/ACH/Dropbox (LewPeaLab)/Gus/ExPress/transformed_SCR/conditioning1_pt1/batch.txt",
		"/C/Users/ACH/Dropbox (LewPeaLab)/Gus/gPPI/roi_rsa_graphing.py",
		"/C/Users/ACH/Dropbox (LewPeaLab)/Gus/gPPI/fslppi_JM/run_ppi.m",
		"/C/Users/ACH/Dropbox (LewPeaLab)/Gus/gPPI/fslppi_JM/spm_PEB.m",
		"/C/Users/ACH/Dropbox (LewPeaLab)/Gus/gPPI/fslppi_JM/fsldesign_to_spmsess.m",
		"/C/Users/ACH/Dropbox (LewPeaLab)/Gus/gPPI/fslppi_JM/read_fsl_design.m",
		"/C/Users/ACH/Dropbox (LewPeaLab)/Gus/gPPI/fslppi_JM/fsl_ppi.m",
		"/C/Users/ACH/Dropbox (LewPeaLab)/Gus/gPPI/bids_model.py",
		"/C/Users/ACH/Dropbox (LewPeaLab)/STUDY/FearCon/CodeBase/fearcon_response.py",
		"/C/Users/ACH/Dropbox (LewPeaLab)/STUDY/FearCon/CodeBase/ev_logreg.py",
		"/C/Users/ACH/Dropbox (LewPeaLab)/STUDY/FearCon/CodeBase/ev_logreg_example.py",
		"/C/Users/ACH/Documents/yup/settings.txt",
		"/C/Users/ACH/Dropbox (LewPeaLab)/STUDY/FearCon/CodeBase/fsl_stats.sh",
		"/C/Users/ACH/Dropbox (LewPeaLab)/Gus/ExPress/analysis/ex_config.py",
		"/C/Users/ACH/Dropbox (LewPeaLab)/STUDY/FearCon/CodeBase/cluster-stuff.txt",
		"/C/Users/ACH/Dropbox (LewPeaLab)/STUDY/FearCon/Group_GLM/cluster_res/cluster_stats.py",
		"/C/Program Files (x86)/Mendeley Desktop/Mendeley.dll",
		"/C/Users/ACH/Dropbox (LewPeaLab)/Gus/gPPI/feats/gPPI/mem_encode_gPPI.fsf",
		"/C/Users/ACH/Desktop/standard/test6.mat",
		"/C/Users/ACH/Desktop/standard/test12.mat",
		"/C/Users/ACH/Dropbox (LewPeaLab)/Gus/ExPress/analysis/ex_behavioral.py",
		"/C/Users/ACH/Dropbox (LewPeaLab)/Gus/gPPI/feats/template_acquisition_rsa.fsf",
		"/C/Users/ACH/Dropbox (LewPeaLab)/Gus/gPPI/feats/template_baseline_rsa.fsf",
		"/C/Users/ACH/Dropbox (LewPeaLab)/Gus/gPPI/feats/template_extinction_rsa.fsf",
		"/C/Users/ACH/Dropbox (LewPeaLab)/Gus/gPPI/feats/lss/template_lss_acquisition.fsf",
		"/C/Users/ACH/Dropbox (LewPeaLab)/Gus/gPPI/feats/lss/template_lss_baseline.fsf",
		"/C/Users/ACH/Dropbox (LewPeaLab)/Gus/gPPI/feats/lss/template_lss_extinction.fsf",
		"/C/Users/ACH/Dropbox (LewPeaLab)/Gus/gPPI/feats/lss/template_lss_localizer_run-01.fsf",
		"/C/Users/ACH/Dropbox (LewPeaLab)/Gus/gPPI/feats/lss/template_lss_localizer_run-02.fsf"
	],
	"find":
	{
		"height": 50.0
	},
	"find_in_files":
	{
		"height": 156.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"paired_barplot",
			"legend_ele",
			"convert",
			"skipped",
			"for",
			"for sub",
			"CS+ - CS-",
			"legend_elements",
			"cleaned",
			"all_",
			"f.",
			"beta",
			"logistic regression beta",
			"beta",
			"predict",
			"recogni",
			"predi",
			"early",
			"ve",
			"late",
			"hlines",
			"center",
			"= ",
			"convert",
			"tight",
			"set_context",
			"false",
			"def ",
			"color",
			"pval",
			"despin",
			"lx",
			"dodge",
			"drop",
			"dropna",
			"plt",
			"1",
			"p convert",
			"corr",
			"major",
			"patch",
			")')",
			"spal = ",
			"all stims",
			"6.0",
			"version",
			"24",
			"set",
			"set_context",
			"pal",
			"cat",
			"multiple",
			"legend",
			"3",
			"upper_right",
			"5",
			"cleaned_smt",
			"smt",
			"n",
			"dat",
			"sns",
			"sq",
			"np.sq",
			"SCR",
			"pd",
			"np",
			"pcl",
			"PCL",
			"survey",
			"pcl",
			"B_disp",
			"initial",
			"healthy",
			"':\n",
			"inflated",
			"reg",
			"confounds",
			"clean",
			"except",
			"auto",
			"memor",
			"clean",
			"confounds",
			"autofil",
			"autofill_fsf",
			"n_perm",
			"c = group_roi_rsa(group='control',ext_split=True,fs=True,hemi=False)\np = group_roi_rsa(group='ptsd',ext_split=True,fs=True,hemi=False)\n\ngroups = ['control','ptsd']\nmemcon = ['encoding','retrieval']\nlevels = ['item','set']\nmems = ['hit','miss']\ncons = ['CS+','CS-']\n# rois = ['mOFC','dACC','amyg','hpc','ins','hc_head','hc_body','hc_tail','rh_hc_head','rh_hc_body','rh_hc_tail','lh_hc_head','lh_hc_body','lh_hc_tail','amyg_bla','amyg_cem','rh_amyg_bla','rh_amyg_cem','lh_amyg_bla','lh_amyg_cem']\nrois = ['mOFC','dACC','amyg','hpc','ins','lh_amyg','rh_amyg','lh_hpc','rh_hpc','sgACC','rACC','rSMA','rACG','hc_head','hc_body','hc_tail','rh_hc_head','rh_hc_body','rh_hc_tail','lh_hc_head','lh_hc_body','lh_hc_tail','amyg_bla','amyg_cem','rh_amyg_bla','rh_amyg_cem','lh_amyg_bla','lh_amyg_cem']  \nphases = {'baseline':24,'acquisition':24,'early_extinction':8,'extinction':16}\n# phases = {'baseline':24,'acquisition':24,'extinction':24}\nsubs = range(24)\nconds = ['CSp','CSm']\n\nfrom graphing_functions import *\n##############Item level##############################\ncdf = c.df.groupby(['trial_type','encode_phase','roi','subject']).mean()\npdf = p.df.groupby(['trial_type','encode_phase','roi','subject']).mean()\n\ners_pvals = pd.DataFrame(index=pd.MultiIndex.from_product([groups,rois,phases,levels]))\nfor roi in rois:\n    for phase in phases:\n        ers_pvals.loc[('control',roi,phase,'item'),'W'] = pg.wilcoxon(cdf.loc[('CS+',phase,roi),'rsa'], cdf.loc[('CS-',phase,roi),'rsa'])['p-val'].values\n        ers_pvals.loc[('ptsd',roi,phase,'item'),'W'] = pg.wilcoxon(pdf.loc[('CS+',phase,roi),'rsa'], pdf.loc[('CS-',phase,roi),'rsa'])['p-val'].values\n\nmdf = pd.concat((cdf,pdf))\nmdf = (mdf.loc['CS+'] - mdf.loc['CS-']).reset_index()\nmdf['group'] = mdf.subject.apply(lgroup)\nmdf['level'] = 'item'\nphase3 = ['baseline','acquisition','extinction']\nmdf = mdf.set_index(['group','roi','encode_phase']).sort_index()",
			"def cscomp",
			"drop",
			"group_comp",
			"def cscomp",
			"group",
			"group_comp",
			"))\n",
			"cscomp",
			"tri",
			"phase_pal",
			"boot_rsa",
			"range",
			"baseline",
			"rACC",
			"range(",
			"group_c",
			"group",
			"12",
			"run-02",
			"run-01",
			"RUNID",
			"name",
			"memory_run-01",
			"sub-FC001",
			"phase3",
			"res",
			"ttest_",
			"tt",
			"tte",
			"file",
			"pickle",
			"w_slice",
			"reg_res",
			"split",
			"group",
			"group_",
			"subj",
			"resamp",
			"apply",
			"range(",
			"expit"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "fm_statistics.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18470,
						"regions":
						{
						},
						"selection":
						[
							[
								7387,
								7394
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "util_scripts.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5245,
						"regions":
						{
						},
						"selection":
						[
							[
								2270,
								2281
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "paper_graphics.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 21171,
						"regions":
						{
						},
						"selection":
						[
							[
								12652,
								12666
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7201.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6532,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										177,
										184
									],
									[
										388,
										395
									],
									[
										453,
										460
									],
									[
										696,
										703
									],
									[
										938,
										945
									],
									[
										1267,
										1274
									],
									[
										1362,
										1369
									],
									[
										1457,
										1464
									],
									[
										1679,
										1686
									],
									[
										1870,
										1877
									],
									[
										2249,
										2256
									],
									[
										2382,
										2389
									],
									[
										2649,
										2656
									],
									[
										3038,
										3045
									],
									[
										3396,
										3403
									],
									[
										3590,
										3597
									],
									[
										3961,
										3968
									],
									[
										4290,
										4297
									],
									[
										4424,
										4431
									],
									[
										4795,
										4802
									],
									[
										5034,
										5041
									],
									[
										5216,
										5223
									],
									[
										5632,
										5639
									],
									[
										5917,
										5924
									],
									[
										6187,
										6194
									],
									[
										6404,
										6411
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								3966,
								3966
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 2,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2022.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "robust_corr.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7629,
						"regions":
						{
						},
						"selection":
						[
							[
								4665,
								4665
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "paper_graphics_style.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3220,
						"regions":
						{
						},
						"selection":
						[
							[
								470,
								1931
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "tables.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6750,
						"regions":
						{
						},
						"selection":
						[
							[
								3396,
								3396
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "fm_graphing.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17628,
						"regions":
						{
						},
						"selection":
						[
							[
								15139,
								14021
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "fm_behavioral.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6071,
						"regions":
						{
						},
						"selection":
						[
							[
								4153,
								4153
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "fm_config.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10992,
						"regions":
						{
						},
						"selection":
						[
							[
								486,
								486
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 50.0
	},
	"input":
	{
		"height": 50.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 229.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "fearmem.sublime-project",
	"replace":
	{
		"height": 72.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"rob",
				"robust_corr.py"
			],
			[
				"grap",
				"fm_graphing.py"
			],
			[
				"util",
				"util_scripts.py"
			],
			[
				"con",
				"fm_config.py"
			],
			[
				"beh",
				"fm_behavioral.py"
			],
			[
				"",
				"paper_graphics.py"
			],
			[
				"gra",
				"fm_graphing.py"
			],
			[
				"fm_co",
				"fm_config.py"
			],
			[
				"fg",
				"fm_config.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Documents/kable_replication/kable_replication.sublime-project"
			],
			[
				"g",
				"~/Documents/gPPI/gPPI.sublime-project"
			],
			[
				"gp",
				"~/Documents/gPPI/gPPI.sublime-project"
			],
			[
				"ho",
				"~/Documents/homicide_data/homicide_data.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 254.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
